// <auto-generated />
using System;
using ECommerceBem.Infrastructure.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceBem.Infrastructure.Migrations
{
    [DbContext(typeof(ECommerceBemDBContext))]
    [Migration("20240930104914_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ECommerceBem.Domain.Entities.ItemPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoTotal")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ITENS_PEDIDO", (string)null);
                });

            modelBuilder.Entity("ECommerceBem.Domain.Entities.Notificacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("TipoNotificacao")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("NOTIFICACAO", (string)null);
                });

            modelBuilder.Entity("ECommerceBem.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("DATETIME2");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("INT");

                    b.Property<int>("Status")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.ToTable("PEDIDO", (string)null);
                });

            modelBuilder.Entity("ECommerceBem.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DescontoPorQuantidade")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("DescontoSazonalPercentual")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("MesComDescontoSazonal")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("INT");

                    b.Property<int>("QuantidadeEmEstoque")
                        .HasColumnType("INT");

                    b.Property<int>("QuantidadeMinimaParaDesconto")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("PRODUTO", (string)null);
                });

            modelBuilder.Entity("ECommerceBem.Domain.Entities.ItemPedido", b =>
                {
                    b.HasOne("ECommerceBem.Domain.Entities.Pedido", null)
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerceBem.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ECommerceBem.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
